name: Deploy to Production
on:
  push:
    branches:
      - release/prod
  workflow_dispatch:
    inputs:
      version:
        description: '–í–µ—Ä—Å–∏—è –¥–ª—è –¥–µ–ø–ª–æ—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: v14.03)'
        required: false
        default: 'latest'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: cd-prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from commit or input
        id: get_version
        run: |
          # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: manual input -> commit message -> git tag -> latest
          if [ "${{ github.event.inputs.version }}" != "latest" ] && [ "${{ github.event.inputs.version }}" != "" ]; then
            VERSION="${{ github.event.inputs.version }}"
            echo "üéØ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–µ—Ä—Å–∏—è –∏–∑ inputs: $VERSION"
          else
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤–µ—Ä—Å–∏—é –∏–∑ commit message (–∏—â–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω [RELEASE-vX.X])
            COMMIT_MSG="${{ github.event.head_commit.message }}"
            if [[ "$COMMIT_MSG" =~ \[RELEASE-v([0-9]+\.[0-9]+(\.[0-9]+)?)\] ]]; then
              VERSION="${BASH_REMATCH[1]}"
              echo "üìù –ù–∞–π–¥–µ–Ω–∞ –≤–µ—Ä—Å–∏—è –≤ commit message: $VERSION"
            else
              # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–µ–≥
              git fetch --tags
              LATEST_TAG=$(git describe --tags --abbrev=0 --match="v*" 2>/dev/null || echo "")
              if [ -n "$LATEST_TAG" ]; then
                VERSION=${LATEST_TAG#v}  # –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å 'v'
                echo "üè∑Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–µ–≥: $VERSION"
              else
                VERSION="latest"
                echo "üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è latest –≤–µ—Ä—Å–∏—è"
              fi
            fi
          fi
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "final_version=$VERSION" >> $GITHUB_ENV

      - name: Deploy Information
        run: |
          echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π!"
          echo "–í–µ—Ä—Å–∏—è: ${{ steps.get_version.outputs.version }}"
          echo "Trigger: ${{ github.event_name }}"

      - name: Deploy to Production Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ secrets.PROD_APP_PATH }}
            git fetch --all --tags
            
            VERSION="${{ steps.get_version.outputs.version }}"
            
            if [ "$VERSION" != "latest" ]; then
              echo "üè∑Ô∏è Checking out tag: v$VERSION"
              if git checkout "v$VERSION"; then
                echo "‚úÖ Successfully checked out tag v$VERSION"
              else
                echo "‚ùå Failed to checkout tag v$VERSION, using latest"
                git pull origin release/prod
              fi
            else
              CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
              echo "üìã Current branch: $CURRENT_BRANCH"
              git pull origin $CURRENT_BRANCH
            fi
            
            echo "üê≥ Building Docker images with version: $VERSION..."
            export RELEASE_VERSION=$VERSION
            
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
            docker compose down
            docker compose build --build-arg RELEASE_VERSION=$VERSION
            docker tag glados-backend:$VERSION glados-backend:latest 2>/dev/null || true
            
            echo "üîÑ Starting services with version $VERSION..."
            docker compose up -d
            
            echo "‚è≥ Waiting for services to stabilize..."
            sleep 15
            
            echo "‚úÖ Deployment completed!"
            echo "üìä Service status:"
            docker compose ps
            
            echo "üè∑Ô∏è Deployed version: $VERSION"

      - name: Notify Success
        if: success()
        run: |
          echo "Deployment —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!"
          echo "–í–µ—Ä—Å–∏—è: ${{ steps.get_version.outputs.version }}"
          echo "Commit: ${{ github.sha }}"

      - name: Show logs
        if: success()
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker logs glados-backend-1 --tail 50