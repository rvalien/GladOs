name: Release Process
on:
  workflow_dispatch:
    inputs:
      version:
        description: '–ù–æ–º–µ—Ä —Ä–µ–ª–∏–∑–∞ (25.5, 25.5.1)'
        required: true
      source_branch:
        description: '–ò—Å—Ö–æ–¥–Ω–∞—è –≤–µ—Ç–∫–∞ –¥–ª—è —Ä–µ–ª–∏–∑–∞'
        required: true
        default: 'master'
      target_branch:
        description: '–¶–µ–ª–µ–≤–∞—è –≤–µ—Ç–∫–∞ –¥–ª—è —Ä–µ–ª–∏–∑–∞'
        required: true
        default: 'release/prod'

jobs:
  release_process:
    environment: cd-prod
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.inputs.source_branch }}

      - name: Set REPO_NAME in lowercase
        run: |
          echo "REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Login to GHCR
        run: echo "${{ github.token }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Tag Docker image with version
        run: |
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ latest –æ–±—Ä–∞–∑–∞
          if ! docker pull ghcr.io/"${{ env.REPO_NAME }}":latest; then
            echo "‚ùå Latest image not found! Please ensure tests passed on master branch."
            exit 1
          fi

          # –¢–µ–≥–∏—Ä—É–µ–º –æ–±—Ä–∞–∑ –≤–µ—Ä—Å–∏–µ–π —Ä–µ–ª–∏–∑–∞
          docker tag ghcr.io/"${{ env.REPO_NAME }}":latest ghcr.io/"${{ env.REPO_NAME }}":v${{ github.event.inputs.version }}
          docker push ghcr.io/"${{ env.REPO_NAME }}":v${{ github.event.inputs.version }}

          echo "‚úÖ Docker image tagged as v${{ github.event.inputs.version }}"

      - name: Create Release Tag
        run: |
          git config user.name "${{ secrets.GIT_USER_NAME }}"
          git config user.email "${{ secrets.GIT_USER_EMAIL }}"
          git tag -a "v${{ github.event.inputs.version }}" -m "Release v${{ github.event.inputs.version }}"
          git push origin "v${{ github.event.inputs.version }}"

      - name: Create Pull Request with version in title
        run: |
          gh pr create \
            --base ${{ github.event.inputs.target_branch }} \
            --head ${{ github.event.inputs.source_branch }} \
            --title "[RELEASE-v${{ github.event.inputs.version }}] Release v${{ github.event.inputs.version }}" \
            --body "Release version **${{ github.event.inputs.version }}**

            **Release Notes:**
            - Version: v${{ github.event.inputs.version }}
            - Source: ${{ github.event.inputs.source_branch }}
            - Target: ${{ github.event.inputs.target_branch }}
            - Docker image: \`ghcr.io/${{ env.REPO_NAME }}:v${{ github.event.inputs.version }}\`

            **Changes:**
            - Docker image tagged as v${{ github.event.inputs.version }}
            - Git tag v${{ github.event.inputs.version }} created

            –ü–æ–∂–∞–ª—É–π—Å—Ç–∞:
            1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
            2. –£—Ç–≤–µ—Ä–¥–∏—Ç–µ PR
            3. –ù–µ —É–Ω—ã–≤–∞–π—Ç–µ

            **‚ö†Ô∏è–ü–æ—Å–ª–µ —Å–ª–∏—è–Ω–∏—è, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –¥–µ–ø–ª–æ–π –≤–µ—Ä—Å–∏–∏ v${{ github.event.inputs.version }} –≤ –ø—Ä–æ–¥**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify Release Created
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          message: |
            üì¶ *New Release Prepared*

            üè∑Ô∏è *Version*: `v${{ github.event.inputs.version }}`
            üåø *Source*: `${{ github.event.inputs.source_branch }}`
            üéØ *Target*: `${{ github.event.inputs.target_branch }}`
            üê≥ *Docker*: `ghcr.io/${{ env.REPO_NAME }}:v${{ github.event.inputs.version }}`

            ‚è≥ *Waiting for PR approval and merge*

            [Review Pull Request](${{ github.server_url }}/${{ github.repository }}/pulls)
