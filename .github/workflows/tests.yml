name: CI tests

on:
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**/*.md'
      - '**/*.yml'
      - '**/*.yaml'
  push:
    branches:
      - master
    paths-ignore:
      - '**/*.md'
      - '**/*.yml'
      - '**/*.yaml'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Build Docker image
      run: docker build -t myapp:test .

    - name: Run pytest with coverage
      run: |
        docker run --rm \
          --user $(id -u):$(id -g) \
          -v ${{ github.workspace }}:/workspace \
          -e COVERAGE_FILE=.coverage \
          myapp:test \
          sh -c "cd /workspace && cp -r /app/* . 2>/dev/null || true && pytest --cov=/app --cov-report=xml:coverage.xml --cov-report=html:htmlcov --cov-report=term"

    - name: List coverage files (debug)
      run: |
        echo "Files in workspace:"
        ls -la ${{ github.workspace }}
        echo "Looking for .coverage* files:"
        find ${{ github.workspace }} -name ".coverage*" -type f

    - name: Upload coverage data
      uses: actions/upload-artifact@v4
      with:
        name: .coverage_${{ github.run_id }}
        path: .coverage
        retention-days: 1

  coverage:
    name: Coverage Report
    runs-on: ubuntu-latest
    needs: test
    if: |
      needs.test.result == 'success' &&
      needs.test.conclusion == 'success'
    permissions:
      pull-requests: write
      contents: write
      actions: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Download coverage artifacts
      uses: actions/download-artifact@v5
      with:
        name: .coverage_${{ github.run_id }}

    - name: Coverage comment
      id: coverage_comment
      uses: py-cov-action/python-coverage-comment-action@v3
      with:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Store Pull Request comment to be posted
      uses: actions/upload-artifact@v4
      if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
      with:
        name: python-coverage-comment-action
        path: python-coverage-comment-action.txt
