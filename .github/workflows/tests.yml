name: CI tests

on:
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**/*.md'
      - '**/*.yml'
      - '**/*.yaml'
  push:
    branches:
      - master
    paths-ignore:
      - '**/*.md'
      - '**/*.yml'
      - '**/*.yaml'
  workflow_dispatch:

jobs:
  tests:
    name: run tests
    timeout-minutes: 20
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend image
        run: docker build -t pytest-app .

      - name: Run tests with coverage
        run: |
          docker run --name pytest-container \
            pytest-app \
            pytest --cov=. --cov-report=xml --cov-report=term

          echo "=== Searching for coverage files in container ==="
          docker exec pytest-container find / -name ".coverage*" 2>/dev/null || true
          docker exec pytest-container find / -name "coverage.xml" 2>/dev/null || true

      - name: Copy coverage files from container
        if: success()
        run: |
          mkdir -p coverage-output
          # Попробуем разные пути
          docker cp pytest-container:/app/.coverage ./coverage-output/ || \
          docker cp pytest-container:/.coverage ./coverage-output/ || \
          echo "Warning: .coverage not found"

          docker cp pytest-container:/app/coverage.xml ./coverage-output/ || \
          docker cp pytest-container:/coverage.xml ./coverage-output/ || \
          echo "Warning: coverage.xml not found"

          echo "Coverage files copied:"
          ls -la ./coverage-output/
      - name: Cleanup container
        if: always()
        run: docker rm pytest-container || true

      - name: Upload coverage artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data
          path: coverage-output/
          retention-days: 1

  coverage:
    name: tests coverage
    runs-on: ubuntu-latest
    needs: tests
    if: success()
    permissions:
      pull-requests: write
      contents: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Download coverage artifacts
        uses: actions/download-artifact@v5
        with:
          name: coverage-data
          path: .

      - name: List downloaded files
        run: |
          echo "Files in current directory:"
          ls -la
          echo "Coverage.xml content check:"
          test -f coverage.xml && echo "✓ coverage.xml exists" || echo "✗ coverage.xml missing"
          test -f .coverage && echo "✓ .coverage exists" || echo "✗ .coverage missing"

      - name: Coverage comment
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v4
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt
