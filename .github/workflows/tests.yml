name: CI tests

on:
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**/*.md'
      - '**/*.yml'
      - '**/*.yaml'
  push:
    branches:
      - master
    paths-ignore:
      - '**/*.md'
      - '**/*.yml'
      - '**/*.yaml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-backend:
    name: build backend image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Map source paths for coverage
        run: |
          sudo rm -rf /home/app
          sudo ln -s "$GITHUB_WORKSPACE" /home/app

      - name: Fix Docker Hub Issue
        run: docker logout

      - name: Login to GHCR
        run: echo "${{ github.token }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Prepare cache directory
        run: mkdir -p /tmp/.buildx-cache

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build & push backend image
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          docker buildx build \
            --progress plain \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache-new,mode=max \
            -t ghcr.io/"$REPO_NAME":ci-${{ github.sha }} \
            --push \
            -f Dockerfile \
            .

          if [ -d /tmp/.buildx-cache-new ]; then
            rm -rf /tmp/.buildx-cache
            mv /tmp/.buildx-cache-new /tmp/.buildx-cache
          fi

  tests:
    name: tests
    timeout-minutes: 20
    runs-on: ubuntu-latest
    environment: ci-tests
    needs: build-backend
    permissions:
      contents: read
      packages: read
    env:
      COMPOSE_FILE: docker-compose.yml
    strategy:
      fail-fast: false


    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Login to GHCR
        run: echo "${{ github.token }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Pull backend image
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          docker pull ghcr.io/"$REPO_NAME":ci-${{ github.sha }}

      - name: Run tests (${{ matrix.shard }})
        env:
          CELERY_TASK_ALWAYS_EAGER: "true"
        run: |
          docker compose run --rm \
            -e COVERAGE_FILE=/tmp/.coverage.${{ matrix.shard }} \
            backend pytest ${{ matrix.pytest_args }}

      - name: Collect coverage data (${{ matrix.shard }})
        run: |
          mkdir -p coverage-data/${{ matrix.shard }}
          find coverage -maxdepth 1 -name ".coverage*" -exec cp {} coverage-data/${{ matrix.shard }}/ \;

      - name: Package coverage shard (${{ matrix.shard }})
        run: |
          touch coverage-data/${{ matrix.shard }}/.keep
          tar -czf coverage_${{ matrix.shard }}.tar.gz -C coverage-data/${{ matrix.shard }} .

      - name: Shutdown services
        if: always()
        run: docker compose down --volumes

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage_${{ matrix.shard }}
          path: coverage_${{ matrix.shard }}.tar.gz
          retention-days: 1
          include-hidden-files: true
